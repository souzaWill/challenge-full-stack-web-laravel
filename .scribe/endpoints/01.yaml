name: Estudantes
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/students
    metadata:
      groupName: Estudantes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Exibe uma lista de estudantes com paginação e busca.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'O número da página a ser retornada (default: 1).'
        required: false
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'O número de registros por página (default: 10).'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'O termo para busca pelo nome do usuário.'
        required: false
        example: nostrum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 11
      per_page: 17
      search: nostrum
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": [
                  {
                      "id": 1,
                      "document": "29436900589",
                      "user": {
                          "id": 2,
                          "name": "Benjamin Carmona Jr.",
                          "email": "padilha.sophia@example.net",
                          "email_verified_at": "2024-10-23T22:26:06.000000Z",
                          "role": 2,
                          "created_at": "2024-10-23T22:26:06.000000Z",
                          "updated_at": "2024-10-23T22:26:06.000000Z"
                      },
                      "registration_number": "99331603",
                      "created_at": "2024-10-23T22:26:06.000000Z",
                      "updated_at": "2024-10-23T22:26:06.000000Z"
                  },
              ],
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "message": "Não autorizado."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kd3vah6gPV1846ZecD5bfaE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/students
    metadata:
      groupName: Estudantes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Cria um novo estudante.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Nome do estudante. Exemplo: 'Benjamin Carmona Jr'"
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: "Email do estudante. Exemplo: 'padilha.sophia@example.net'"
        required: true
        example: jerome.armstrong@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      document:
        name: document
        description: 'CPF do estudante. Exemplo: 29436900589'
        required: true
        example: quisquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      registration_number:
        name: registration_number
        description: 'Número de registro do estudante. Exemplo: 99331603'
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: rerum
      email: jerome.armstrong@example.net
      document: quisquam
      registration_number: dolores
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "id": 1,
              "document": "29436900589",
              "user": {
                  "id": 2,
                  "name": "Benjamin Carmona Jr.",
                  "email": "padilha.sophia@example.net",
                  "email_verified_at": "2024-10-23T22:26:06.000000Z",
                  "role": 2,
                  "created_at": "2024-10-23T22:26:06.000000Z",
                  "updated_at": "2024-10-23T22:26:06.000000Z"
              },
              "registration_number": "99331603",
              "created_at": "2024-10-23T22:26:06.000000Z",
              "updated_at": "2024-10-23T22:26:06.000000Z"
          }

          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k56cV4Ed3e86DagPhf1bZav'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/students/{id}'
    metadata:
      groupName: Estudantes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Exibe um estudante específico.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the student.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      student:
        name: student
        description: 'O ID do estudante. Exemplo: 1'
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      student: 13
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "id": 1,
              "document": "29436900589",
              "user": {
                  "id": 2,
                  "name": "Benjamin Carmona Jr.",
                  "email": "padilha.sophia@example.net",
                  "email_verified_at": "2024-10-23T22:26:06.000000Z",
                  "role": 2,
                  "created_at": "2024-10-23T22:26:06.000000Z",
                  "updated_at": "2024-10-23T22:26:06.000000Z"
              },
              "registration_number": "99331603",
              "created_at": "2024-10-23T22:26:06.000000Z",
              "updated_at": "2024-10-23T22:26:06.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gef634d1ahPE6Dka85vZVcb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/students/{id}'
    metadata:
      groupName: Estudantes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Atualiza as informações de um estudante específico.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the student.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      student:
        name: student
        description: 'O ID do estudante a ser atualizado. Exemplo: 1'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      student: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'O nome do estudante. Exemplo: "Benjamin Carmona Jr."'
        required: true
        example: laboriosam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'O e-mail do estudante. Deve ser único. Exemplo: "benjamin@example.com"'
        required: true
        example: kwintheiser@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: laboriosam
      email: kwintheiser@example.org
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "id": 1,
              "document": "29436900589",
              "user": {
                  "id": 2,
                  "name": "Benjamin Carmona Jr.",
                  "email": "benjamin@example.com",
                  "email_verified_at": "2024-10-23T22:26:06.000000Z",
                  "role": 2,
                  "created_at": "2024-10-23T22:26:06.000000Z",
                  "updated_at": "2024-10-23T22:26:06.000000Z"
              },
              "registration_number": "99331603",
              "created_at": "2024-10-23T22:26:06.000000Z",
              "updated_at": "2024-10-23T22:26:06.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cfhakg5v13VedZDb8Ea466P'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/students/{id}'
    metadata:
      groupName: Estudantes
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove um estudante específico.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the student.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      student:
        name: student
        description: 'O ID do estudante a ser removido. Exemplo: 1'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      student: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5cZhgDfk8EP6Va34aev1b6d'
    controller: null
    method: null
    route: null
    custom: []
